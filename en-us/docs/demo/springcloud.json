{
  "filename": "springcloud.md",
  "__html": "<h1>SpringCloud示例</h1>\n<p>SpringCloud 示例说明<br>\n共三个模块如下：<br>\nspring-demo-client(发起方 | LCN模式)<br>\nspring-demo-d  (参与方 | TXC模式)<br>\nspring-demo-e  (参与方 | TCC模式)</p>\n<p>代码地址:<a href=\"https://github.com/codingapi/txlcn-demo\">https://github.com/codingapi/txlcn-demo</a></p>\n<p>调用关系说明:</p>\n<p>spring-demo-client -&gt; DemoController的<code>txlcn</code>的Mapping是调用发起方法，代码如下。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@RestController</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DemoController</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> DemoService demoService;\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">DemoController</span><span class=\"hljs-params\">(DemoService demoService)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.demoService = demoService;\n    }\n\n    <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/txlcn\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">execute</span><span class=\"hljs-params\">(@RequestParam(<span class=\"hljs-string\">\"value\"</span>)</span> String value) </span>{\n        <span class=\"hljs-keyword\">return</span>  demoService.execute(value);\n    }\n\n\n}\n\n\n</code></pre>\n<p>demoService.execute(value)代码:</p>\n<pre><code class=\"language-java\">\n<span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-meta\">@Slf</span>4j\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DemoServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">DemoService</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> ClientDemoMapper demoMapper;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> DDemoClient dDemoClient;\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> EDemoClient eDemoClient;\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">DemoServiceImpl</span><span class=\"hljs-params\">(ClientDemoMapper demoMapper, DDemoClient dDemoClient, EDemoClient eDemoClient)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.demoMapper = demoMapper;\n        <span class=\"hljs-keyword\">this</span>.dDemoClient = dDemoClient;\n        <span class=\"hljs-keyword\">this</span>.eDemoClient = eDemoClient;\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-meta\">@TxcTransaction</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">execute</span><span class=\"hljs-params\">(String value)</span> </span>{\n        <span class=\"hljs-comment\">/*\n         * 注意 5.0.0 请用 DTXLocal 类\n         * 注意 5.0.0 请自行获取应用名称\n         * 注意 5.0.0 其它类重新导入包名\n         */</span>\n\n        <span class=\"hljs-comment\">// ServiceD</span>\n        String dResp = dDemoClient.rpc(value);\n\n        <span class=\"hljs-comment\">// ServiceE</span>\n        String eResp = eDemoClient.rpc(value);\n\n        <span class=\"hljs-comment\">// local transaction</span>\n        Demo demo = <span class=\"hljs-keyword\">new</span> Demo();\n        demo.setDemoField(value);\n        demo.setAppName(Transactions.APPLICATION_ID_WHEN_RUNNING); <span class=\"hljs-comment\">// 应用名称</span>\n        demo.setCreateTime(<span class=\"hljs-keyword\">new</span> Date());\n        demo.setGroupId(DTXLocalContext.getOrNew().getGroupId());  <span class=\"hljs-comment\">// DTXLocal</span>\n        demo.setUnitId(DTXLocalContext.getOrNew().getUnitId());\n        demoMapper.save(demo);\n\n        <span class=\"hljs-comment\">// 手动异常，DTX B回滚</span>\n<span class=\"hljs-comment\">//        int i = 1 / 0;</span>\n        <span class=\"hljs-keyword\">return</span> dResp + <span class=\"hljs-string\">\" &gt; \"</span> + eResp + <span class=\"hljs-string\">\" &gt; \"</span> + <span class=\"hljs-string\">\"ok-client\"</span>;\n    }\n}\n</code></pre>\n<p>dDemoClient.rpc(value)代码:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-meta\">@Slf</span>4j\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DemoServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">DemoService</span> </span>{\n\n   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> DDemoMapper demoMapper;\n\n\n   <span class=\"hljs-meta\">@Autowired</span>\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">DemoServiceImpl</span><span class=\"hljs-params\">(DDemoMapper demoMapper)</span> </span>{\n       <span class=\"hljs-keyword\">this</span>.demoMapper = demoMapper;\n   }\n\n   <span class=\"hljs-meta\">@Override</span>\n   <span class=\"hljs-meta\">@TxcTransaction</span>(propagation = DTXPropagation.SUPPORTS)\n   <span class=\"hljs-meta\">@Transactional</span>\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">rpc</span><span class=\"hljs-params\">(String value)</span> </span>{\n       <span class=\"hljs-comment\">/*\n        * 注意 5.0.0 请用 DTXLocal 类\n        * 注意 5.0.0 请自行获取应用名称\n        * 注意 5.0.0 其它类重新导入包名\n        */</span>\n<span class=\"hljs-comment\">//        log.info(\"GroupId: {}\", TracingContext.tracing().groupId());</span>\n       Demo demo = <span class=\"hljs-keyword\">new</span> Demo();\n       demo.setCreateTime(<span class=\"hljs-keyword\">new</span> Date());\n       demo.setDemoField(value);\n       demo.setAppName(Transactions.APPLICATION_ID_WHEN_RUNNING);  <span class=\"hljs-comment\">// 应用名称</span>\n       demo.setGroupId(DTXLocalContext.getOrNew().getGroupId());   <span class=\"hljs-comment\">// DTXLocal</span>\n       demo.setUnitId(DTXLocalContext.getOrNew().getUnitId());\n       demoMapper.save(demo);\n<span class=\"hljs-comment\">//        moreOperateMapper.update(new Date());</span>\n<span class=\"hljs-comment\">//        moreOperateMapper.delete();</span>\n       <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"ok-d\"</span>;\n   }\n}\n\n</code></pre>\n<p>eDemoClient.rpc(value)代码：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-meta\">@Slf</span>4j\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DemoServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">DemoService</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> EDemoMapper demoMapper;\n\n    <span class=\"hljs-keyword\">private</span> ConcurrentHashMap&lt;String, Long&gt; ids = <span class=\"hljs-keyword\">new</span> ConcurrentHashMap&lt;&gt;();\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">DemoServiceImpl</span><span class=\"hljs-params\">(EDemoMapper demoMapper)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.demoMapper = demoMapper;\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-meta\">@TxcTransaction</span>(propagation = DTXPropagation.SUPPORTS)\n    <span class=\"hljs-meta\">@Transactional</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">rpc</span><span class=\"hljs-params\">(String value)</span> </span>{\n        <span class=\"hljs-comment\">/*\n         * 注意 5.0.0 请用 DTXLocal 类\n         * 注意 5.0.0 请自行获取应用名称\n         * 注意 5.0.0 其它类重新导入包名\n         */</span>\n<span class=\"hljs-comment\">//        log.info(\"GroupId: {}\", TracingContext.tracing().groupId());</span>\n\n        Demo demo = <span class=\"hljs-keyword\">new</span> Demo();\n        demo.setDemoField(value);\n        demo.setCreateTime(<span class=\"hljs-keyword\">new</span> Date());\n        demo.setAppName(Transactions.APPLICATION_ID_WHEN_RUNNING);\n        demo.setGroupId(DTXLocalContext.getOrNew().getGroupId());\n        demo.setUnitId(DTXLocalContext.getOrNew().getUnitId());\n        demoMapper.save(demo);\n<span class=\"hljs-comment\">//        ids.put(DTXLocalContext.getOrNew().getGroupId(), demo.getId());</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"ok-e\"</span>;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmRpc</span><span class=\"hljs-params\">(String value)</span> </span>{\n        log.info(<span class=\"hljs-string\">\"tcc-confirm-\"</span> + DTXLocalContext.getOrNew().getGroupId());\n        ids.remove(DTXLocalContext.getOrNew().getGroupId());\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelRpc</span><span class=\"hljs-params\">(String value)</span> </span>{\n        log.info(<span class=\"hljs-string\">\"tcc-cancel-\"</span> + DTXLocalContext.getOrNew().getGroupId());\n        Long kid = ids.get(DTXLocalContext.getOrNew().getGroupId());\n        demoMapper.deleteByKId(kid);\n    }\n}\n\n</code></pre>\n<h2>事务参与方D</h2>\n<p>工程截图<br>\n<img src=\"../../../img/docs/maven-sd.png\" alt=\"maven project\"><br>\n项目配置文件 application.properties</p>\n<pre><code class=\"language-properties\">\n<span class=\"hljs-meta\">spring.application.name</span>=<span class=\"hljs-string\">spring-demo-d</span>\n<span class=\"hljs-meta\">server.port</span>=<span class=\"hljs-string\">12002</span>\n<span class=\"hljs-meta\">spring.datasource.type</span>=<span class=\"hljs-string\">com.alibaba.druid.pool.DruidDataSource</span>\n<span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n<span class=\"hljs-comment\">## TODO 你的配置</span>\n<span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/txlcn-demo\\\n  ?characterEncoding=UTF-8&amp;serverTimezone=UTC</span>\n<span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-comment\">#spring.datasource.hikari.maximum-pool-size=20</span>\n<span class=\"hljs-meta\">mybatis.configuration.map-underscore-to-camel-case</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-meta\">mybatis.configuration.use-generated-keys</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-comment\">\n\n## tx-manager 配置</span>\n<span class=\"hljs-comment\">#tx-lcn.client.manager-address=127.0.0.1:8070</span>\n\n</code></pre>\n<h2>Application</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@SpringBootApplication</span>\n<span class=\"hljs-meta\">@EnableDiscoveryClient</span>\n<span class=\"hljs-meta\">@EnableDistributedTransaction</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SpringDApplication</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        SpringApplication.run(SpringDApplication.class, args);\n\n    }\n}\n\n\n</code></pre>\n<h2>事务参与方E</h2>\n<p>工程截图<br>\n<img src=\"../../../img/docs/maven-se.png\" alt=\"maven project\"><br>\n项目配置文件 application.properties</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">spring.application.name</span>=<span class=\"hljs-string\">spring-demo-e</span>\n<span class=\"hljs-meta\">server.port</span>=<span class=\"hljs-string\">12003</span>\n\n<span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n<span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://ip:port/txlcn-demo?characterEncoding=UTF-8</span>\n<span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">123456</span>\n<span class=\"hljs-meta\">spring.datasource.hikari.maximum-pool-size</span>=<span class=\"hljs-string\">20</span>\n\n<span class=\"hljs-meta\">mybatis.configuration.map-underscore-to-camel-case</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-meta\">mybatis.configuration.use-generated-keys</span>=<span class=\"hljs-string\">true</span>\n\n</code></pre>\n<h2>Application</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@SpringBootApplication</span>\n<span class=\"hljs-meta\">@EnableDiscoveryClient</span>\n<span class=\"hljs-meta\">@EnableDistributedTransaction</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SpringEApplication</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        SpringApplication.run(SpringEApplication.class, args);\n    }\n}\n\n\n</code></pre>\n<h2>事务发起方Client</h2>\n<p>工程截图<br>\n<img src=\"../../../img/docs/maven-s.png\" alt=\"maven project\"><br>\n项目配置文件 application.properties</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">spring.application.name</span>=<span class=\"hljs-string\">spring-demo-client</span>\n<span class=\"hljs-meta\">server.port</span>=<span class=\"hljs-string\">12011</span>\n<span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n<span class=\"hljs-comment\">## TODO 你的配置</span>\n<span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://127.0.0.1:3306/txlcn-demo?characterEncoding=UTF-8&amp;serverTimezone=UTC</span>\n<span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-meta\">spring.datasource.hikari.maximum-pool-size</span>=<span class=\"hljs-string\">20</span>\n<span class=\"hljs-meta\">mybatis.configuration.map-underscore-to-camel-case</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-meta\">mybatis.configuration.use-generated-keys</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-comment\">\n# 关闭Ribbon的重试机制（如果有必要）</span>\n<span class=\"hljs-meta\">ribbon.MaxAutoRetriesNextServer</span>=<span class=\"hljs-string\">0</span>\n<span class=\"hljs-meta\">ribbon.ReadTimeout</span>=<span class=\"hljs-string\">5000</span>\n<span class=\"hljs-meta\">ribbon.ConnectTimeout</span>=<span class=\"hljs-string\">5000</span>\n<span class=\"hljs-comment\">        \n\n## tx-manager 配置</span>\n<span class=\"hljs-comment\">#tx-lcn.client.manager-address=127.0.0.1:8070</span>\n\n</code></pre>\n<h2>Application</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@SpringBootApplication</span>\n<span class=\"hljs-meta\">@EnableDiscoveryClient</span>\n<span class=\"hljs-meta\">@EnableDistributedTransaction</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SpringClientApplication</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        SpringApplication.run(SpringClientApplication.class, args);\n    }\n}\n\n</code></pre>\n<h2>启动SpringCloud微服务</h2>\n<p>事务参与方 D<br>\n<img src=\"../../../img/docs/spring-d.png\" alt=\"spring-d\">\n事务参与方 E<br>\n<img src=\"../../../img/docs/spring-e.png\" alt=\"spring-e\">\n事务发起方 Client<br>\n<img src=\"../../../img/docs/spring-client.png\" alt=\"spring-client\"></p>\n",
  "link": "\\en-us\\docs\\demo\\springcloud.html",
  "meta": {}
}