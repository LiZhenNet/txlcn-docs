{
  "filename": "env.md",
  "__html": "<h1>尝试下简单的分布式事务</h1>\n<h2>步骤引导</h2>\n<ol>\n<li>\n<p>阅读<a href=\"/zh-cn/docs/start.html\">快速开始</a></p>\n</li>\n<li>\n<p>准备开发环境\nJDK1.8+, Mysql5.6+, Redis3.2+, Consul(SpringCloud), ZooKeeper(Dubbo), Git, Maven</p>\n</li>\n<li>\n<p>初始化数据</p>\n</li>\n<li>\n<p>启动TxManager(TM)</p>\n</li>\n<li>\n<p>配置微服务模块</p>\n</li>\n<li>\n<p>启动模块与测试</p>\n</li>\n</ol>\n<h2>3. 初始化数据</h2>\n<blockquote>\n<p>为了演示方便，我们接下来3个微服务用一个数据库，一张数据表。</p>\n</blockquote>\n<ol>\n<li>创建MySQL数据库</li>\n</ol>\n<pre><code>create database if not exists `txlcn-demo` default charset utf8 collate utf8_general_ci;\n</code></pre>\n<ol start=\"2\">\n<li>创建数据表</li>\n</ol>\n<pre><code>create table `t_demo` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `kid` varchar(45) DEFAULT NULL,\n  `group_id` varchar(64) DEFAULT NULL,\n  `demo_field` varchar(255) DEFAULT NULL,\n  `app_name` varchar(128) DEFAULT NULL,\n  `create_time` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;\n</code></pre>\n<h2>4. 启动TxManager(TM)</h2>\n<p>TM启动详情，见<a href=\"/zh-cn/docs/start.html\">快速启动</a><br>\n这里介绍如何在开发环境友好启动TM.</p>\n<ol>\n<li>新建SpringBoot模块</li>\n<li>新增依赖</li>\n</ol>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.codingapi.txlcn<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>txlcn-tm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>5.0.2.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<ol start=\"3\">\n<li>在主类上标注 @EnableTransactionManagerServer</li>\n</ol>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@SpringBootApplication</span>\n<span class=\"hljs-meta\">@EnableTransactionManagerServer</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TransactionManagerApplication</span> </span>{\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n      SpringApplication.run(TransactionManagerApplication.class, args);\n  }\n\n}\n</code></pre>\n<ol start=\"4\">\n<li>运行DemoTransactionManager\n<img src=\"../../../img/docs/tm_start.png\" alt=\"tx-manager\"></li>\n</ol>\n<h2>5. 配置微服务模块</h2>\n<p>Dubbo Demo见<a href=\"dubbo.html\">Dubbo-Demo</a></p>\n<p>SpringCloud Demo见<a href=\"springcloud.html\">SpringCloud-Demo</a></p>\n<h2>6. 启动模块与测试</h2>\n<ol>\n<li>\n<p>正常提交事务<br>\n访问 发起方提供的Rest接口 <code>/txlcn?value=the-value</code>。发现事务全部提交<br>\n<img src=\"../../../img/docs/result.png\" alt=\"result\"></p>\n</li>\n<li>\n<p>回滚事务<br>\n访问 发起方提供的Rest接口 <code>/txlcn?value=the-value&amp;ex=throw</code>。发现发起方由本地事务回滚，而参与方ServiceB、ServiceC，由于TX-LCN的协调，数据也回滚了。<br>\n<img src=\"../../../img/docs/error_result.png\" alt=\"error_result\"></p>\n</li>\n</ol>\n",
  "link": "\\zh-cn\\docs\\demo\\env.html",
  "meta": {}
}